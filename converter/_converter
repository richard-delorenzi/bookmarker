#!/usr/bin/python3

import json
import sys
import re
from datetime import datetime
 
data = json.load(sys.stdin)
output=[]

def merge_dictionaries(a,b):
    return {**a, **b}

def is_type(data,t):
    return (
        "type" in data and
        data["type"] == t )

def has_children(data):
    return "children" in data

def is_element(data,e):
    return (
        is_type(data,"Element") and
        has_children(data) and
        "tagName" in data and
        data["tagName"] == e )

def is_dt(data):
    return is_element(data,"dt")

def is_text(data):
    return is_type(data,"text")

def process_list (data):
    for item in data:
        process(item)

def process_dict (data):
    if is_dt(data):
        process_dt(data["children"])
    elif has_children(data):
        process(data["children"])
    else: pass

def process_dt(data):
    process_dt_list(data)

def process_dt_list (data):
    dd={}
    for item in data:
        if is_element(item,"a"):
            a = dt_a_data(item)
        if is_element(item,"dd"):
            dd = dt_dd_data(item)
    record=merge_dictionaries(a,dd)
    record["user"]="ctrl_alt_delor@delisious"
    output.append(record)

def dt_a_data(data):
    attr=data["attributes"]
    
    unix_date=attr["ADD_DATE"]
    date=datetime.fromtimestamp(unix_date).isoformat()
    url=attr["HREF"]
    is_private=attr["PRIVATE"] != 0
    tagstring=attr["TAGS"]
    tags=list(filter(None,map(str.strip,re.split( "\W+",  tagstring ))))

    name=""
    for i in data["children"]:
        if is_type(i,"Text"):
            name = " ".join( [name, i["content"]] )
    name=name.strip()

    return {
        "date":date,
        "url": url,
        "private": is_private,
        "tags":tags,
        "name":name
    }

def dt_dd_data(data):
    description=""
    children=data["children"]
    for child in children:
        assert is_type(child,"Text")
        description += child["content"]
        
    return {"description": description}
    

def process(data):
    if isinstance(data,list):
        process_list(data)
    if isinstance(data,dict):
        process_dict(data)
    else:
        pass

        
process(data)
print (json.dumps(output, sort_keys=True, indent=4))
